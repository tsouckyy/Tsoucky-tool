# -*- coding: utf-8 -*-
"""Main

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1wyei0C6mg3XoUuRK0QF2wFY8RGVNEKMh
"""

import json
import os

# Fonction pour effacer l'écran (utile pour rendre l'affichage plus propre)
def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

# Fonction pour afficher le design "Tsoucky"
def afficher_design():
    print("\n")
    print("**************************************")
    print("**       Bienvenue dans Tsoucky    **")
    print("**       Menu Principal            **")
    print("**************************************")
    print("\n")
    print("    TTTTT  SSSS  OOO  U   U  CCCC  K   K  Y   Y")
    print("      T    S     O   O U   U C      K  K    Y Y")
    print("      T    SSS   O   O U   U C      KKK      Y")
    print("      T      S   O   O U   U C      K  K     Y")
    print("      T    SSSS   OOO   UUU  CCCC  K   K    Y")
    print("\n")
    print("Création d'un Bot et menu interactif")
    print("\n")

# Fonction pour afficher le menu principal
def afficher_menu():
    print("Choisissez une option:")
    print("1. Lancer Tsoucky Bot")
    print("2. Option indéfinie 1")
    print("3. Option indéfinie 2")
    print("4. Option indéfinie 3")
    print("5. Option indéfinie 4")
    print("6. Quitter")

# Fonction pour charger la base de connaissances (si elle existe)
def charger_connaissances():
    if os.path.exists("knowledge_base.json"):
        with open("knowledge_base.json", "r", encoding="utf-8") as f:
            return json.load(f)
    return {}

# Fonction pour sauvegarder la base de connaissances
def sauvegarder_connaissances(knowledge_base):
    with open("knowledge_base.json", "w", encoding="utf-8") as f:
        json.dump(knowledge_base, f, ensure_ascii=False, indent=4)

# Fonction pour le Tsoucky Bot (Bot qui apprend de lui-même)
def tsoucky_bot():
    knowledge_base = charger_connaissances()
    print("\nBienvenue dans Tsoucky Bot !")
    print("Je peux apprendre et retenir ce que tu me dis.")

    while True:
        print("\nQue veux-tu que j'apprenne ? (Tape 'exit' pour quitter)")
        question = input("Pose-moi une question : ")

        if question.lower() == 'exit':
            break

        # Si la question est déjà dans la base de connaissances, répondre à partir de celle-ci
        if question in knowledge_base:
            print(f"Tsoucky Bot : {knowledge_base[question]}")
        else:
            # Si ce n'est pas dans la base de données, demander la réponse
            print("Tsoucky Bot : Je ne sais pas la réponse à cette question. Apprends-moi !")
            reponse = input("Tu peux m'apprendre cela ? : ")
            knowledge_base[question] = reponse
            sauvegarder_connaissances(knowledge_base)
            print(f"Tsoucky Bot : Merci, je vais me souvenir de cela !")

# Fonction pour afficher les connaissances du bot (option indéfinie 1 pour l'instant)
def option_1():
    print("\nOption 1 sélectionnée, mais elle n'est pas encore définie.")

# Fonction pour option indéfinie 2
def option_2():
    print("\nOption 2 sélectionnée, mais elle n'est pas encore définie.")

# Fonction pour option indéfinie 3
def option_3():
    print("\nOption 3 sélectionnée, mais elle n'est pas encore définie.")

# Fonction pour option indéfinie 4
def option_4():
    print("\nOption 4 sélectionnée, mais elle n'est pas encore définie.")

# Fonction principale
def main():
    clear_screen()
    afficher_design()

    while True:
        afficher_menu()
        choix = input("\nEntrez votre choix : ")

        if choix == '1':
            tsoucky_bot()
        elif choix == '2':
            option_1()
        elif choix == '3':
            option_2()
        elif choix == '4':
            option_3()
        elif choix == '5':
            option_4()
        elif choix == '6':
            print("Au revoir !")
            break
        else:
            print("Choix invalide. Veuillez réessayer.")

if __name__ == "__main__":
    main()